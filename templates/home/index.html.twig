{% extends 'base.html.twig' %}

{% block title %}Home{% endblock %}

{% block body %}
    <section id="home" class="col-12 offset-lg-2 col-lg-8">
        <div>
            <b-card-group columns>

                <b-card>
                    <b-card-text>The Movie Data Base</b-card-text>
                </b-card>

                {% for movie in trendingMovies %}
                    <b-card
                            align="center"
                            img-src="https://image.tmdb.org/t/p/w500{{ movie.poster_path }}"
                            img-alt="Poster of {{ movie.title }}"
                            img-top
                    >
                        <b-card-text>
                            <b-button v-if="user_watched_movies_ids.includes({{ movie.id }})" block variant="success">
                                <b-icon-eye-fill></b-icon-eye-fill>
                            </b-button>
                            <b-button v-else v-on:click='watched({{ movie.id }})' block variant="danger">
                                <b-icon-eye-slash></b-icon-eye-slash>
                            </b-button>
                        </b-card-text>
                    </b-card>
                {% endfor %}

                <b-card bg-variant="primary" text-variant="white">
                    <blockquote class="card-blockquote">
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
                        <footer>
                            <small>Someone famous in <cite title="Source Title">Source Title</cite></small>
                        </footer>
                    </blockquote>
                </b-card>

            </b-card-group>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    <script>
        new Vue({
            el: '#home',
            delimiters: ['${', '}'],
            data: {
                user_watched_movies_ids: [
                    {% for movie in app.user.movies %}
                    {{ movie.tmdbId }},
                    {% endfor %}
                ],
            },
            mounted() {},
            methods: {
                watched: function(movieTMDBId) {
                    axios
                        .post('{{ path('user_watch', {'id': 'idToReplace'}) }}'.replace('idToReplace', movieTMDBId),{
                            tmdb_id: movieTMDBId
                        })
                        .then(
                            response => {
                                this.user_watched_movies_ids.push(movieTMDBId)
                            }, error => {
                                console.log(error)
                            }
                        )
                }
            }
        })
    </script>
{% endblock %}