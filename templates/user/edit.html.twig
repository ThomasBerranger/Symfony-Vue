{% extends 'base.html.twig' %}

{% block title %}My profile{% endblock %}

{% block body %}

    <div id="userShow" class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">
            <h1>Edition de compte</h1>

            <h3 class="my-5">Bonjour ${ form.username } !</h3>

            <b-form @submit.prevent="onSubmit" @reset.prevent="onReset">
                <b-form-group
                        id="input-group-1"
                        label="Ton adresse email:"
                        label-for="input-1"
                        description="T'inquiète, ton email ne sera pas communiqué."
                >
                    <b-form-input
                            readonly
                            id="input-1"
                            v-model="form.email"
                            type="email"
                            required
                            placeholder="Enter email"
                    ></b-form-input>
                </b-form-group>

                <b-form-group id="input-group-2" label="Ton pseudo:" label-for="input-2">
                    <b-form-input
                            id="input-2"
                            v-model="form.username"
                            required
                            placeholder="Enter username"
                            :state="validation"
                            v-on:keyup="usernameCheck"
                    ></b-form-input>
                    <b-form-invalid-feedback :state="validation">
                        Votre pseudo doit contenir entre 2 et 20 caractères.
                    </b-form-invalid-feedback>
                </b-form-group>

                <b-button type="submit" variant="primary">Submit</b-button>
                <b-button type="reset" variant="info">Reset</b-button>
                <a href="{{ path('app_logout') }}" class="btn btn-danger">Logout</a>
            </b-form>

        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        new Vue({
            el: '#userShow',
            delimiters: ['${', '}'],
            data: {
                form: {
                    id: ({{ app.user.id }}),
                    email: '{{ app.user.email }}',
                    username: '{{ app.user.username }}',
                    password: '{{ app.user.password }}',
                },
            },
            computed: {
                validation() {
                    return this.form.username.length > 2 && this.form.username.length < 20
                }
            },
            methods: {
                usernameCheck: function () {
                    axios
                        .get('{{ path('api_user_check_username', { 'username': 'replaceMe' }) }}'.replace('replaceMe', this.form.username))
                        .then(
                            response => {
                                console.log(response.data.isAlreadyUsed)
                            }, error => {
                                console.log(error)
                            }
                        )
                },
                onSubmit: function() {
                    axios
                        .put('{{ path('api_user_edit') }}', this.form)
                        .then(
                            response => {
                                console.log(response)
                            }, error => {
                                console.log(error)
                            }
                        )
                },
                onReset: function() {
                    this.form = {
                        email: '{{ app.user.email }}',
                        username: '{{ app.user.username }}',
                        password: '',
                    }
                },
            }
        })
    </script>
{% endblock %}